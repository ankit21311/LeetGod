class Solution {
    public boolean canPlaceBalls(int[] position, int mid, int m) {
        int count = 1; // Start by placing the first ball at the first position
        int prev = position[0];
        for (int i = 1; i < position.length; i++) {
            int current = position[i];
            if (current - prev >= mid) {
                count++;
                prev = current;
                if (count >= m) {
                    return true;
                }
            }
        }
        return false;
    }

    public int maxDistance(int[] position, int m) {
        Arrays.sort(position);
        int n = position.length;
        int start = 1, end = position[n - 1] - position[0];

        int result = -1; // Initialize result to -1 to avoid confusion with valid distances
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (canPlaceBalls(position, mid, m)) {
                result = mid;
                start = mid + 1; // Try for a larger minimum distance
            } else {
                end = mid - 1; // Try for a smaller minimum distance
            }
        }
        return result;
    }
}
